#include <Servo.h>
Servo sr, sl;                      // sr => 왼쪽 서보모터, sl => 오른쪽 서보모터
void setup() {
  Serial.begin(9600);
  sr.attach(13);                  // 디지털 핀 13과 오른쪽 서보모터 연결.
  sl.attach(12);                  // 디지털 핀 12와 왼쪽 서보모터 연결.
}
void loop() {
  if (Serial.available()) {     // 시리얼포트에 수신된 데이터가 있는지 확인.
    char b[2];                  // 배열 b[2] 중 b[0]에는 앞뒤로 회전하는 피치(pitch)값을, 
                                // b[1]에는 좌우로 회전하는 롤(roll)값을 저장함.
    int p, r;
    Serial.readBytes(b, 2);    // 시리얼 통신에서 두 바이트의 데이터를 읽어 배열 b에 저장함.
    p = b[0] * 3;              // 피치(pitch) 값 X 3 => 1500-270 ~ 1500+270
    r = b[1];                  // 롤(roll) 값  => 1500-90 ~ 1500+90
                               // 피치 값은 앞으로 기울어질 때 음수 값을 가지고, 뒤로 기울어질 때는 양수 값을 가짐. (앞)-90~0~90(뒤).
                               // 롤 값은 좌측으로 회전할 때 음수 값을 가지고, 우측으로 회전할 때 양수 값을 가짐.   (좌)-90~0~90(우)
    sr.write(1500 - p - r);  
    sl.write(1500 + p - r);  
                              // 1. 스마트폰을 앞으로 기울일 때 : p값은 음수이므로 
                              //  sl.write()가 1500보다 작아져 반시계 방향으로 회전함.
                             //  sr.write()는 -(음수)는 양수로 표현 가능하니까 1500보다 값이 커짐.

                            // 2. 스마트폰을 뒤로 기울일 때 : p값이 양수이므로
                            //  sl.write()가 1500 + (양수) -> 1500 보다 큼. -> 시계 방향 회전.
                            //  sr.write()가 1500 - (양수) -> 1500 보다 작음. -> 반시계 방향 회전.

                            // 3. 스마트폰을 좌측으로 기울일 때 : r값은 음수이므로
                            //  아두이노 로봇 Abot이 좌측으로 회전하기 위해서는 좌측바퀴는 시계, 우측바퀴 또한 시계 방향으로 돌아야 함.
                            //  sl.write()가 1500 - (음수) -> 1500 보다 큼. -> 시계 방향 회전.
                            //  sr.write()기 1500 - (음수) -> 1500 보다 큼. -> 시계 방향 회전.
    
                           // 4. 스마트폰을 우측으로 기울일 때 : r값은 양수이므로 
                           // 우측으로 회전하기 위해서는 좌측 바퀴와 우측 바퀴 모두 반시계 방향으로 회전해야함.
                           // sl.write()가 1500 - (양수) -> 1500보다 작음. -> 반시계 방향 회전.
                           // sr.write()가 1500 - (양수) -> 1500보다 작음. -> 반시계 방향 회전.

    Serial.write('1');     // 읽었음을 확인하는 값
  }
}

